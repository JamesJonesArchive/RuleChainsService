---
- name: install sudo
  package:
    name: "sudo"
    state: latest    
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  tags:
    - deploy
- block:
  - name: Add RuleChains Repo
    yum_repository:
      name: "{{ rulechainsrepo.name }}"
      description: "{{ rulechainsrepo.name }}"
      baseurl: "{{ rulechainsrepo.baseurl }}"
      gpgcheck: "{{ rulechainsrepo.gpgcheck }}"
      repo_gpgcheck: "{{ rulechainsrepo.repo_gpgcheck }}"
      enabled: "{{ rulechainsrepo.enabled }}"
      metadata_expire: 1200
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
    tags:
      - deploy
  - name: install the latest version of RuleChains
    package:
      name: RuleChains
      state: latest
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
    tags:
      - deploy
  when: "deploy_env == 'Production'"
- block:
  - name: create package folder
    file:
      path: /tmp/debs
      state: "{{ item }}"
    with_items:
      - absent
      - directory
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
    tags:
      - deploy
  - name: Copy package to remote host
    copy:
      src: "{{ item }}"
      dest: /tmp/debs
    with_fileglob:
      - "../build/libs/rulechains*.deb"
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
    tags:
      - deploy
  - name: Find the rulechains package that was produced
    find:
      paths: "/tmp/debs"
      patterns: "rulechains*.deb"
    register: iffind
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
    tags:
      - deploy
  - name: Install a rulechains .deb package
    apt:
      deb: "{{ item.path }}"
    with_items: "{{ iffind.files|default([]) }}"
    register: rc_result
    when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
    tags:
      - deploy
  when: "deploy_env != 'Production'"
- name: install the latest updates
  package:
    name: "*"
    state: latest    
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
  tags:
    - deploy
- name: install the latest updates
  package:
    name: "*"
    state: latest    
    force_apt_get: True
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  tags:
    - deploy
- name: create RuleChains env config
  template:
    src: "../templates/systemd/rulechains.j2"
    dest: /etc/sysconfig/rulechains
    mode: 0644
    backup: no    
- name: Add config template
  template:
    src: "{{ playbook_dir }}/templates/config/rulechains-config.yml.j2"
    dest: /usr/local/etc/rulechains/rulechains-config.yml
    mode: 0644
  tags:
    - deploy    
- name: create runit folders
  file:
    path: "/etc/service/{{ item }}"
    state: directory
  with_items:
    - rulechains
    - nginx
  tags:
    - deploy    
- name: Copy over nginx runit file
  copy:
    src: "{{ playbook_dir }}/files/runit/{{ item }}"
    dest: "/etc/service/{{ item | splitext | first }}/run"
    owner: root
    group: root
    mode: 0755
  with_items:
    - nginx.sh
  tags:
    - deploy    
- name: Add rulechains runit template
  template:
    src: "{{ playbook_dir }}/templates/runit/rulechains.sh.j2"
    dest: /etc/service/rulechains/run
    mode: 0755
  tags:
    - deploy    
    