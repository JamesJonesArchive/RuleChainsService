---
- hosts: "{{ target_hosts }}"
  gather_facts: "{{ gather_facts|default(true)|bool }}"
  vars_files:
    - ./vars/main.yml
    - ./vars/vault.yml
  vars:
    app_name: "{{ lookup('ini', 'appBaseName type=properties file=../gradle.properties') }}"
    app_version: "{{ lookup('ini', 'appVersion type=properties file=../gradle.properties') }}"
  pre_tasks:
  - raw: test -e /usr/bin/python || (apt -y update && apt install -y python-minimal sudo)
    when: "gather_facts|default(true)|bool == false"
    tags:
      - deploy      
  - setup: # aka gather_facts
    when: "gather_facts|default(true)|bool == false"
    tags:
      - deploy   
  - set_fact:
      postgresql_users:
        - name: "{{ rulechains[deploy_env].database.user }}"
          password: "{{ rulechains[deploy_env].database.password }}"
      postgresql_databases:
        - name: "{{ rulechains[deploy_env].database.dbname }}"
      postgresql_hba_entries:
        - { type: host, database: "{{ rulechains[deploy_env].database.dbname }}", user: "{{ rulechains[deploy_env].database.user }}", address: '127.0.0.1/32', auth_method: password }
    when: "deploy_env != 'Production'"
    tags:
      - deploy   
  roles:
    - role: 'nginx'
      tags: ["deploy"]
    - role: postgresql
      tags: ["deploy"]
  tasks:
    - name: Build RuleChainsService
      include_tasks: build.yml
      tags:
        - build
    - name: Publish RuleChainsService
      include_tasks: publish.yml
      when: "deploy_env == 'Production'"
      tags:
        - publish
    - name: Provision RuleChainsService
      include_tasks: provision.yml
      tags:
        - provision
    - name: Deploy RuleChainsService
      include_tasks: deploy.yml
      # when: "deploy_env == 'Development'"
      tags:
        - deploy
